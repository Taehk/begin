# day16

Map
==> 하나의 데이터를 그 데이터를 구분할 수 있는 키값과 한쌍으로 만들어서
	데이터를 기억하는 컬렉션의 일종
	그리고 사용할 경우에는 키값을 이용해서 데이터를 꺼낼 수 있도록 하는 것...
	
	Map계열은 많은 양의 데이터를 보관하는 용도보다는
	데이터를 손쉽게 구분하여 사용할 목적으로 사용된다.
	
HashMap / HashTable
	
	HashTable 이 구 버젼
	HashMap이 신 버젼...
	따라서 HashMap 사용을 권장하고 있다.
	
	내부적으로 키값을 해쉬 테이블을 이용해서 정렬해서 보관한다.
	
	주요함수
		put(Object key, Object value)
		==> 데이터를 입력하는 함수
		get(Object key)
		==> 데이터를 꺼내는 함수
		
		values()
		==> 데이터들만 꺼내주는 함수
		keys()
		==> 키값들만 꺼내주는 함수
		
		참고 ]
			keys()로 꺼낸 데이터는 Enumeration으로 반환한다.
			==> 이 클래스는 Iterator의 구버젼이다.
				즉, 데이터를 순차적으로 꺼낼 수 있는 것이다.
				
		참고 ]
			HashMap에서는 키값만 꺼내는 함수가 keySet()으로 변경되었다.
			
		참고 ]
			entrySet()
			==> Map은  반드시 키값을 알아야 꺼낼 수 있다.
				(위의 함수를 이용하면 다른 방식으로 꺼낼 수 있지만...)
				==> 키값과 데이터를 Set으로 묶어주는 함수
				
			문제는
				Map은 항상 두개(키값과 데이터)가 있어야 저장된다.
				Set은 오직 한개만 저장된다.
				어떻하던지 Key와 데이터를 하나로 묶어야만 Set에 저장이 된다.
				
				==>
				이 문제를 해결하기 위한 클래스(VO 클래스)가 존재한다.
				그 클래스가 바로 
					Map.Entry
				이다.
				==>
					이 클래스 안에는 Key와 Value 변수가 은닉화 되어있고
					이 변수를 사용할 수 있도록 함수를 제공하고 있다.
					이렇게 두개의 변수를 하나로 묶어 놓은 클래스이다.
					
----------------------------------------------------------------------------------------------------------------------
TreeMap
==> TreeSet과 마찬가지로 내부에서 정렬하면서 데이터를 기억하는 Map이다.
	이때 정렬기준으로 키값을 이용해서 정렬하게 된다.
	따라서 키값이 정렬이 되지 않는 클래스를 사용할 수 없고
	필요하다면 정렬방식을 정해서 사용해야 한다.
	
	참고 ]
		
		가끔 클래스를 보면 기능을 필요로 해서 만들어진 것이 아니고
		여러개의 데이터를 하나로 묶기 위한 목적으로 만들어 놓은 클래스가 있다.
		
		class Tmp {
			String name;
			int age;
		}
		
		이런 클래스를 우리는 데이터 빈 클래스라고도 하고
		Value Object(VO) 라고도 한다.
		또는 이런 클래스들은 데이터를 전달할 목적으로 사용되므로
		DTO(Data Transfer Object) 라고도 부른다.
		
	참고 ]
		컬렉션 안에는 다시 컬렉션을 입력할 수 있다.
		왜?
			컬렉션 안에는 모든 클래스를 입력할 수 있으므로
			켈력션도 클래스이므로 저장이 가능하다.
		
	
					
		
	